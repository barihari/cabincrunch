"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_manual_flight_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/manual-flight-form */ \"(app-pages-browser)/./src/components/manual-flight-form.tsx\");\n/* harmony import */ var _components_flight_info_card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/flight-info-card */ \"(app-pages-browser)/./src/components/flight-info-card.tsx\");\n/* harmony import */ var _components_unified_flight_input__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/unified-flight-input */ \"(app-pages-browser)/./src/components/unified-flight-input.tsx\");\n/* harmony import */ var _lib_flight_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/flight-parser */ \"(app-pages-browser)/./src/lib/flight-parser.ts\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tesseract.js */ \"(app-pages-browser)/./node_modules/tesseract.js/src/index.js\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(tesseract_js__WEBPACK_IMPORTED_MODULE_6__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n// @ts-ignore\n\nfunction Home() {\n    _s();\n    const [flightData, setFlightData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [pastedText, setPastedText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [loadingStep, setLoadingStep] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const handlePasteChange = (text)=>{\n        setPastedText(text);\n    };\n    const isUrl = (text)=>{\n        try {\n            new URL(text);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n    const extractTextFromImage = async (base64Image)=>{\n        setLoadingStep(\"Processing image with OCR...\");\n        const result = await tesseract_js__WEBPACK_IMPORTED_MODULE_6___default().recognize(\"data:image/png;base64,\".concat(base64Image), 'eng', {\n            logger: (m)=>{\n                if (m.status === 'recognizing text') {\n                    setLoadingStep(\"Processing image... \".concat(Math.round(m.progress * 100), \"%\"));\n                }\n            }\n        });\n        console.log('OCR Confidence:', result.data.confidence);\n        console.log('OCR Raw Text:', result.data.text);\n        return result.data.text;\n    };\n    const parseFlightFromText = (text)=>{\n        setLoadingStep(\"Extracting flight details...\");\n        console.log('Parsing text:', text);\n        const flightData = {};\n        // Enhanced airline detection with more patterns\n        const airlinePatterns = [\n            /(?:^|\\s)(American Airlines?|Delta|United|Southwest|JetBlue|Alaska|Spirit|Frontier|Allegiant|Hawaiian|Sun Country)(?:\\s|$)/i,\n            /(?:^|\\s)(AA|DL|UA|WN|B6|AS|NK|F9|G4|HA|SY)\\s*\\d+/i,\n            /Flight\\s+(AA|DL|UA|WN|B6|AS|NK|F9|G4|HA|SY)\\s*\\d+/i\n        ];\n        for (const pattern of airlinePatterns){\n            const match = text.match(pattern);\n            if (match) {\n                let airline = match[1];\n                // Convert codes to full names\n                const airlineMap = {\n                    'AA': 'American Airlines',\n                    'DL': 'Delta',\n                    'UA': 'United',\n                    'WN': 'Southwest',\n                    'B6': 'JetBlue',\n                    'AS': 'Alaska',\n                    'NK': 'Spirit',\n                    'F9': 'Frontier',\n                    'G4': 'Allegiant',\n                    'HA': 'Hawaiian',\n                    'SY': 'Sun Country'\n                };\n                flightData.airline = airlineMap[airline.toUpperCase()] || airline;\n                console.log('Found airline:', flightData.airline);\n                break;\n            }\n        }\n        // Enhanced airport code detection\n        const airportPattern = /\\b([A-Z]{3})\\b/g;\n        const airportMatches = [\n            ...text.matchAll(airportPattern)\n        ];\n        if (airportMatches.length >= 2) {\n            flightData.origin = airportMatches[0][1];\n            flightData.destination = airportMatches[1][1];\n            console.log('Found route:', flightData.origin, 'â†’', flightData.destination);\n        }\n        // Enhanced date detection with multiple formats\n        const datePatterns = [\n            /(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s+([A-Z][a-z]{2})\\s+(\\d{1,2}),?\\s+(\\d{4})/i,\n            /([A-Z][a-z]{2})\\s+(\\d{1,2}),?\\s+(\\d{4})/i,\n            /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})/i,\n            /(\\d{4})-(\\d{1,2})-(\\d{1,2})/i,\n            /(?:departure|depart|on)\\s+([A-Z][a-z]{2})\\s+(\\d{1,2})/i // departure Sep 3\n        ];\n        for (const pattern of datePatterns){\n            const match = text.match(pattern);\n            if (match) {\n                try {\n                    let dateStr = '';\n                    if (pattern.source.includes('Mon|Tue|Wed')) {\n                        // Wed, Sep 3, 2025 format\n                        const month = match[1];\n                        const day = match[2];\n                        const year = match[3];\n                        dateStr = \"\".concat(year, \"-\").concat(getMonthNumber(month), \"-\").concat(day.padStart(2, '0'));\n                    } else if (pattern.source.includes('([A-Z][a-z]{2})\\\\s+(\\\\d{1,2}),?\\\\s+(\\\\d{4})')) {\n                        // Sep 3, 2025 format\n                        const month = match[1];\n                        const day = match[2];\n                        const year = match[3];\n                        dateStr = \"\".concat(year, \"-\").concat(getMonthNumber(month), \"-\").concat(day.padStart(2, '0'));\n                    } else if (pattern.source.includes('(\\\\d{1,2})\\\\/(\\\\d{1,2})\\\\/(\\\\d{4})')) {\n                        // 9/3/2025 format\n                        const month = match[1];\n                        const day = match[2];\n                        const year = match[3];\n                        dateStr = \"\".concat(year, \"-\").concat(month.padStart(2, '0'), \"-\").concat(day.padStart(2, '0'));\n                    } else if (pattern.source.includes('(\\\\d{4})-(\\\\d{1,2})-(\\\\d{1,2})')) {\n                        // 2025-09-03 format\n                        dateStr = \"\".concat(match[1], \"-\").concat(match[2].padStart(2, '0'), \"-\").concat(match[3].padStart(2, '0'));\n                    } else if (pattern.source.includes('departure|depart|on')) {\n                        // departure Sep 3 format (assume current year)\n                        const month = match[1];\n                        const day = match[2];\n                        const year = new Date().getFullYear();\n                        dateStr = \"\".concat(year, \"-\").concat(getMonthNumber(month), \"-\").concat(day.padStart(2, '0'));\n                    }\n                    if (dateStr) {\n                        flightData.departureDate = dateStr;\n                        console.log('Found date:', flightData.departureDate);\n                        break;\n                    }\n                } catch (e) {\n                    console.log('Date parsing error:', e);\n                }\n            }\n        }\n        // Price detection\n        const pricePattern = /\\$(\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?)/;\n        const priceMatch = text.match(pricePattern);\n        if (priceMatch) {\n            flightData.cashPrice = parseFloat(priceMatch[1].replace(',', ''));\n            console.log('Found price:', flightData.cashPrice);\n        }\n        // Cabin class detection\n        const cabinPatterns = [\n            /\\b(First|Business|Premium|Economy|Coach|Main)\\s*(?:Class|Cabin)?\\b/i,\n            /\\b(F|J|W|Y)\\s*(?:Class)?\\b/i\n        ];\n        for (const pattern of cabinPatterns){\n            const match = text.match(pattern);\n            if (match) {\n                let cabin = match[1];\n                const cabinMap = {\n                    'F': 'First',\n                    'J': 'Business',\n                    'W': 'Premium',\n                    'Y': 'Economy',\n                    'Coach': 'Economy',\n                    'Main': 'Economy'\n                };\n                flightData.cabinClass = cabinMap[cabin] || cabin;\n                console.log('Found cabin:', flightData.cabinClass);\n                break;\n            }\n        }\n        return flightData;\n    };\n    const getMonthNumber = (monthName)=>{\n        const months = {\n            'Jan': '01',\n            'Feb': '02',\n            'Mar': '03',\n            'Apr': '04',\n            'May': '05',\n            'Jun': '06',\n            'Jul': '07',\n            'Aug': '08',\n            'Sep': '09',\n            'Oct': '10',\n            'Nov': '11',\n            'Dec': '12'\n        };\n        return months[monthName] || '01';\n    };\n    const handleSearch = async ()=>{\n        setIsLoading(true);\n        setLoadingStep(\"\");\n        try {\n            if (isUrl(pastedText.trim())) {\n                // Handle URL with screenshot API\n                setLoadingStep(\"Taking screenshot of webpage...\");\n                const response = await fetch('/api/screenshot-flight', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        url: pastedText.trim()\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error(\"Screenshot API error: \".concat(response.status));\n                }\n                const result = await response.json();\n                if (result.success && result.image) {\n                    // Process the screenshot with OCR\n                    const extractedText = await extractTextFromImage(result.image);\n                    const parsedData = parseFlightFromText(extractedText);\n                    setFlightData(parsedData);\n                } else {\n                    throw new Error(result.error || 'Failed to take screenshot');\n                }\n            } else {\n                // Parse text directly\n                setLoadingStep(\"Parsing flight details...\");\n                const parsed = (0,_lib_flight_parser__WEBPACK_IMPORTED_MODULE_5__.parseFlightSummary)(pastedText);\n                setFlightData(parsed);\n            }\n        } catch (error) {\n            console.error('Error processing flight data:', error);\n            setFlightData({\n                airline: 'Error processing flight data',\n                origin: 'Please enter manually below',\n                destination: '',\n                departureDate: '',\n                cabinClass: '',\n                cashPrice: undefined\n            });\n        } finally{\n            setIsLoading(false);\n            setLoadingStep(\"\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container mx-auto px-4 py-8 max-w-4xl\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"space-y-8\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center space-y-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"text-3xl font-bold\",\n                            children: \"Amex Flight Point Optimizer\"\n                        }, void 0, false, {\n                            fileName: \"/Users/sbeharry/sites/cabincrunch/src/app/page.tsx\",\n                            lineNumber: 253,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-muted-foreground\",\n                            children: \"Evaluate whether a flight is bookable using Amex Membership Rewards transfer partners\"\n                        }, void 0, false, {\n                            fileName: \"/Users/sbeharry/sites/cabincrunch/src/app/page.tsx\",\n                            lineNumber: 254,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/sbeharry/sites/cabincrunch/src/app/page.tsx\",\n                    lineNumber: 252,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_unified_flight_input__WEBPACK_IMPORTED_MODULE_4__.UnifiedFlightInput, {\n                    onFlightDataExtracted: setFlightData,\n                    isLoading: isLoading,\n                    loadingStep: loadingStep,\n                    onSearch: handleSearch,\n                    pastedText: pastedText,\n                    onTextChange: handlePasteChange\n                }, void 0, false, {\n                    fileName: \"/Users/sbeharry/sites/cabincrunch/src/app/page.tsx\",\n                    lineNumber: 260,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_manual_flight_form__WEBPACK_IMPORTED_MODULE_2__.ManualFlightForm, {\n                    flightData: flightData,\n                    onFlightDataChange: setFlightData\n                }, void 0, false, {\n                    fileName: \"/Users/sbeharry/sites/cabincrunch/src/app/page.tsx\",\n                    lineNumber: 270,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_flight_info_card__WEBPACK_IMPORTED_MODULE_3__.FlightInfoCard, {\n                    flightData: flightData\n                }, void 0, false, {\n                    fileName: \"/Users/sbeharry/sites/cabincrunch/src/app/page.tsx\",\n                    lineNumber: 276,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/sbeharry/sites/cabincrunch/src/app/page.tsx\",\n            lineNumber: 251,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/sbeharry/sites/cabincrunch/src/app/page.tsx\",\n        lineNumber: 250,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"+rbT2IYu9cSO3l0eK6hz2k7+ey8=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ })

});